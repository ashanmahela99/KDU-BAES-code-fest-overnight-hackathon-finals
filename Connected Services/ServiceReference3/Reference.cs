//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SLIITWeb.ServiceReference3 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="QueueOfIoTDataVfuG9A47", Namespace="http://schemas.datacontract.org/2004/07/System.Collections.Generic")]
    [System.SerializableAttribute()]
    public partial class QueueOfIoTDataVfuG9A47 : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private SLIITWeb.ServiceReference3.IoTData[] _arrayField;
        
        private int _headField;
        
        private int _sizeField;
        
        private int _tailField;
        
        private int _versionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public SLIITWeb.ServiceReference3.IoTData[] _array {
            get {
                return this._arrayField;
            }
            set {
                if ((object.ReferenceEquals(this._arrayField, value) != true)) {
                    this._arrayField = value;
                    this.RaisePropertyChanged("_array");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _head {
            get {
                return this._headField;
            }
            set {
                if ((this._headField.Equals(value) != true)) {
                    this._headField = value;
                    this.RaisePropertyChanged("_head");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _size {
            get {
                return this._sizeField;
            }
            set {
                if ((this._sizeField.Equals(value) != true)) {
                    this._sizeField = value;
                    this.RaisePropertyChanged("_size");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _tail {
            get {
                return this._tailField;
            }
            set {
                if ((this._tailField.Equals(value) != true)) {
                    this._tailField = value;
                    this.RaisePropertyChanged("_tail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int _version {
            get {
                return this._versionField;
            }
            set {
                if ((this._versionField.Equals(value) != true)) {
                    this._versionField = value;
                    this.RaisePropertyChanged("_version");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IoTData", Namespace="http://schemas.datacontract.org/2004/07/IoT_Consumer")]
    [System.SerializableAttribute()]
    public partial class IoTData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool OkayField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Okay {
            get {
                return this.OkayField;
            }
            set {
                if ((this.OkayField.Equals(value) != true)) {
                    this.OkayField = value;
                    this.RaisePropertyChanged("Okay");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference3.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IoTConsume", ReplyAction="http://tempuri.org/IService1/IoTConsumeResponse")]
        void IoTConsume(long ID, int Count, bool Okay);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/IoTConsume", ReplyAction="http://tempuri.org/IService1/IoTConsumeResponse")]
        System.Threading.Tasks.Task IoTConsumeAsync(long ID, int Count, bool Okay);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DataIngressed", ReplyAction="http://tempuri.org/IService1/DataIngressedResponse")]
        SLIITWeb.ServiceReference3.IoTData[] DataIngressed(SLIITWeb.ServiceReference3.QueueOfIoTDataVfuG9A47 queue, long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DataIngressed", ReplyAction="http://tempuri.org/IService1/DataIngressedResponse")]
        System.Threading.Tasks.Task<SLIITWeb.ServiceReference3.IoTData[]> DataIngressedAsync(SLIITWeb.ServiceReference3.QueueOfIoTDataVfuG9A47 queue, long ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        SLIITWeb.ServiceReference3.QueueOfIoTDataVfuG9A47 GetData(SLIITWeb.ServiceReference3.QueueOfIoTDataVfuG9A47 queue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<SLIITWeb.ServiceReference3.QueueOfIoTDataVfuG9A47> GetDataAsync(SLIITWeb.ServiceReference3.QueueOfIoTDataVfuG9A47 queue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCompleted_Ratio", ReplyAction="http://tempuri.org/IService1/GetCompleted_RatioResponse")]
        SLIITWeb.ServiceReference3.IoTData[] GetCompleted_Ratio(SLIITWeb.ServiceReference3.QueueOfIoTDataVfuG9A47 queue, long StepId, int Count, bool Okay);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCompleted_Ratio", ReplyAction="http://tempuri.org/IService1/GetCompleted_RatioResponse")]
        System.Threading.Tasks.Task<SLIITWeb.ServiceReference3.IoTData[]> GetCompleted_RatioAsync(SLIITWeb.ServiceReference3.QueueOfIoTDataVfuG9A47 queue, long StepId, int Count, bool Okay);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDefective_Ratio", ReplyAction="http://tempuri.org/IService1/GetDefective_RatioResponse")]
        SLIITWeb.ServiceReference3.IoTData[] GetDefective_Ratio(SLIITWeb.ServiceReference3.QueueOfIoTDataVfuG9A47 queue, long StepId, int Count, bool Okay);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDefective_Ratio", ReplyAction="http://tempuri.org/IService1/GetDefective_RatioResponse")]
        System.Threading.Tasks.Task<SLIITWeb.ServiceReference3.IoTData[]> GetDefective_RatioAsync(SLIITWeb.ServiceReference3.QueueOfIoTDataVfuG9A47 queue, long StepId, int Count, bool Okay);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ResponseTime", ReplyAction="http://tempuri.org/IService1/ResponseTimeResponse")]
        System.DateTime ResponseTime();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ResponseTime", ReplyAction="http://tempuri.org/IService1/ResponseTimeResponse")]
        System.Threading.Tasks.Task<System.DateTime> ResponseTimeAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : SLIITWeb.ServiceReference3.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<SLIITWeb.ServiceReference3.IService1>, SLIITWeb.ServiceReference3.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void IoTConsume(long ID, int Count, bool Okay) {
            base.Channel.IoTConsume(ID, Count, Okay);
        }
        
        public System.Threading.Tasks.Task IoTConsumeAsync(long ID, int Count, bool Okay) {
            return base.Channel.IoTConsumeAsync(ID, Count, Okay);
        }
        
        public SLIITWeb.ServiceReference3.IoTData[] DataIngressed(SLIITWeb.ServiceReference3.QueueOfIoTDataVfuG9A47 queue, long ID) {
            return base.Channel.DataIngressed(queue, ID);
        }
        
        public System.Threading.Tasks.Task<SLIITWeb.ServiceReference3.IoTData[]> DataIngressedAsync(SLIITWeb.ServiceReference3.QueueOfIoTDataVfuG9A47 queue, long ID) {
            return base.Channel.DataIngressedAsync(queue, ID);
        }
        
        public SLIITWeb.ServiceReference3.QueueOfIoTDataVfuG9A47 GetData(SLIITWeb.ServiceReference3.QueueOfIoTDataVfuG9A47 queue) {
            return base.Channel.GetData(queue);
        }
        
        public System.Threading.Tasks.Task<SLIITWeb.ServiceReference3.QueueOfIoTDataVfuG9A47> GetDataAsync(SLIITWeb.ServiceReference3.QueueOfIoTDataVfuG9A47 queue) {
            return base.Channel.GetDataAsync(queue);
        }
        
        public SLIITWeb.ServiceReference3.IoTData[] GetCompleted_Ratio(SLIITWeb.ServiceReference3.QueueOfIoTDataVfuG9A47 queue, long StepId, int Count, bool Okay) {
            return base.Channel.GetCompleted_Ratio(queue, StepId, Count, Okay);
        }
        
        public System.Threading.Tasks.Task<SLIITWeb.ServiceReference3.IoTData[]> GetCompleted_RatioAsync(SLIITWeb.ServiceReference3.QueueOfIoTDataVfuG9A47 queue, long StepId, int Count, bool Okay) {
            return base.Channel.GetCompleted_RatioAsync(queue, StepId, Count, Okay);
        }
        
        public SLIITWeb.ServiceReference3.IoTData[] GetDefective_Ratio(SLIITWeb.ServiceReference3.QueueOfIoTDataVfuG9A47 queue, long StepId, int Count, bool Okay) {
            return base.Channel.GetDefective_Ratio(queue, StepId, Count, Okay);
        }
        
        public System.Threading.Tasks.Task<SLIITWeb.ServiceReference3.IoTData[]> GetDefective_RatioAsync(SLIITWeb.ServiceReference3.QueueOfIoTDataVfuG9A47 queue, long StepId, int Count, bool Okay) {
            return base.Channel.GetDefective_RatioAsync(queue, StepId, Count, Okay);
        }
        
        public System.DateTime ResponseTime() {
            return base.Channel.ResponseTime();
        }
        
        public System.Threading.Tasks.Task<System.DateTime> ResponseTimeAsync() {
            return base.Channel.ResponseTimeAsync();
        }
    }
}
